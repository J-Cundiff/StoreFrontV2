@*@model IEnumerable<StoreFrontV2.DATA.EF.Models.Product>*@

@model IPagedList<StoreFrontV2.DATA.EF.Models.Product>
@using X.PagedList.Mvc.Core;
@using X.PagedList;

@{
    ViewData["Title"] = "Tiled Products";
}


<p class="text-center" align="center">

	<div class="row">
		<div align="center" class="col-md-6 col-md-offset-3 mb-3">
			<a asp-action="Index" class="btn btn-primary">Table View</a>
		</div>
	</div>

		@if (User.IsInRole("Admin"))
		{
			@*<a asp-action="Create" class="btn btn-primary">Add Product</a>*@


			<div class="row mb-5">
				<div align="center" class="col-md-6 col-md-offset-3 mb-3">
					<button id="ToggleProductCreate" class="btn btn-primary">
						Add New Product
					</button>
				</div>
			</div>

			<div id="ProductCreate">
				<partial name="ProductCreate" model="new StoreFrontV2.DATA.EF.Models.Product()" />
			</div>

		}

</p>

<div class="row text-center">
	<div class="col-md-offset-3 col-md-6">
		<div id="MessageContent" class="text-center"></div>
	</div>
</div>
<section>

	<div class="container" >
		<div class="row">
            <div class="col-sm-3">
				<div class="left-sidebar">
				
					<h2>Category</h2>
					<div class="panel-group category-products" id="accordian"><!--category-productsr-->
						<form asp-action="TiledProducts" method="get">
						
							@*
							Inputs for search
							*@
							<div>
								<input type="text" name="searchTerm" class="form-control w-100 text-center" placeholder="Search" />
								
							</div>
						
							@*
							Categories Filter Dropdown
							*@
							<label for="CategoryId" class="control-label d-block text-center"></label>
							<select name="categoryId" class="form-control text-center mb-3" asp-items="ViewBag.CategoryId">
								<option value="0">[Choose a Category]</option>
							</select>
							<input type="submit" value="Go" class="btn btn-primary text-center w-50 d-block" />
							@if (ViewBag.NbrResults != null)
							{
								<p class="mt-5 p-2 alert-warning text-center">
									Showing @ViewBag.NbrResults result@(ViewBag.NbrResults > 1 ? "s" : "") for '@ViewBag.SearchTerm'
								</p>
							}
						</form>
					</div>
				</div>
				
			</div>

            <!--Products section-->
            <div class="col-sm-9 padding-right">
                <div class="features_items">
                    <h2 class="title text-center">Our Products</h2>
                    @foreach (var item in Model)
                    {
                        <div class="col-sm-4">
                            <div class="product-image-wrapper">
                                <div class="single-products">
                                    <div class="productinfo text-center">
										<!--TODO add back item.ProductImage when get all pictures. current is a placeholder-->
                                        <img src="~/images/@item.ProductImage" alt="@item.ProductDescription" />
                                        <h2>@Html.DisplayFor(modelItem => item.ProductPrice)</h2>
                                        <p>@item.ProductName</p>
                                        <a asp-action="AddToCart" asp-controller="ShoppingCart" asp-route-id="@item.ProductId" class="btn btn-default add-to-cart"><i class="fa fa-shopping-cart"></i>Add to cart</a>
                                    </div>
                                    <div class="product-overlay">
                                        <div class="overlay-content">
											<h2>@Html.DisplayFor(modelItem => item.ProductPrice)</h2>
                                            <p>@item.ProductName</p>
                                            <a asp-action="AddToCart" asp-controller="ShoppingCart" asp-route-id="@item.ProductId" class="btn btn-default add-to-cart"><i class="fa fa-shopping-cart"></i>Add to cart</a>
                                            <a asp-action="Details" asp-route-id="@item.ProductId" class="btn btn-default add-to-cart">Details</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    }

                </div>
            </div>

			

    
			<div class="row mt-5 text-center">
				<div class="w-50 mx-auto">
					Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
				</div>
				<div class="w-100">
					@Html.PagedListPager(
					Model,
					page => Url.Action("TiledProducts",
					new { page, searchTerm = ViewBag.SearchTerm, categoryId = ViewBag.Category })
					)
				</div>
			</div>
        </div>
	</div>

</section>

@section scripts {
	<script>

		//****** AJAX Create ******//
		//Hide on page load
		$("#ProductCreate").hide();
		$("#ToggleProductCreate").on("click", function () {
			$("#ProductCreate").toggle();
		});

		$("#ProductCreateForm").on("submit", function (e) {

			e.preventDefault();

			let formData = $(this).serializeArray();
			console.log(formData);

			$.ajax({
				url: "/Products/AjaxCreate",
				type: "POST",
				data: formData,
				dataType: "json",
				error: function (e) {
					$("#MessageContent").html("<div class='alert alert-danger'>There was a problem...</div>");
				},
				success: function (product) {
					$("#MessageContent").html("<div class='alert alert-success'>Product Added!</div>");
					$("#ProductCreateForm")[0].reset();
					$(function () {
						let row = "<tr id='Product-" + product.productId + "'><td>" + product.productName +
							"</td><td>" + product.Price +
							"</td><td>" + product.Description +
							"</td><td>" + product.qtyInStock +
							"</td><td>" + product.qtyOnOrder +
							"</td><td>" + product.statusId +
							"</td><td>" + product.productImage +
							"</td><td>" + product.categoryId +
							"</td><td>" + product.supplierId +
							"</td><td> Refresh page for options</td></tr>";
						$("#ProductsTable").append(row);
						$("#ProductCreate").hide();
					});
				}

			});


		});
	</script>

}






















