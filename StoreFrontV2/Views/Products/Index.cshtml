@model IEnumerable<StoreFrontV2.DATA.EF.Models.Product>


@{
    ViewData["Title"] = "Shop";
}


<p class="text-center" align="center">


	<div class="row">
		<div align="center" class="col-md-6 col-md-offset-3 mb-3">
			<a asp-action="TiledProducts" class="btn btn-primary">Tile View</a>
		</div>
	</div>

		@if (User.IsInRole("Admin"))
		{
			@*<a asp-action="Create" class="btn btn-primary">Add Product</a>*@
			
			<div class="row mb-5">
				<div align="center" class="col-md-6 col-md-offset-3 mb-3">
				    <button id="ToggleProductCreate" class="btn btn-primary">
				        Add New Product
				    </button>
				</div>
			</div>

			<div id="ProductCreate">
			    <partial name="ProductCreate" model="new StoreFrontV2.DATA.EF.Models.Product()" />
			</div>

			
		}

</p>
<div class="row text-center">
	<div class="col-md-offset-3 col-md-6">
		<div id="MessageContent" class="text-center"></div>
	</div>
</div>
<section>
	<div class="container">
		<div class="row">

			<!--Products section-->
			<div class="col-sm-12 padding-right">
				<div class="features_items">
					<h2 class="title text-center">Our Products</h2>
					<div id="tableShopContainer" class="features_items">
						<table class="table col-sm-12">
						    <thead>
						        <tr>
						            <th>
						                @Html.DisplayNameFor(model => model.ProductName)
						            </th>
						            <th>
						                @Html.DisplayNameFor(model => model.ProductPrice)
						            </th>
						            @*<th>
						                @Html.DisplayNameFor(model => model.ProductDescription)
						            </th>
						            <th>
						                @Html.DisplayNameFor(model => model.QtyInStock)
						            </th>
						            <th>
						                @Html.DisplayNameFor(model => model.QtyOnOrder)
						            </th>*@
						            <th>
						                @Html.DisplayNameFor(model => model.ProductImage)
						            </th>
						            <th>
						                @Html.DisplayNameFor(model => model.Category)
						            </th>
						            @*<th>
						                @Html.DisplayNameFor(model => model.Status)
						            </th>*@
						            <th>
						                @Html.DisplayNameFor(model => model.Supplier)
						            </th>
									<th></th>
									@if (User.IsInRole("Admin"))
									{
										<th>Actions</th>

									}
						        </tr>
						    </thead>
						    <tbody>
								@foreach (var item in Model) {
									<tr>
									    <td>
									        <a asp-action="Details" asp-route-id="@item.ProductId" id="productName">
												@Html.DisplayFor(modelItem => item.ProductName)
											
									        </a>
									    </td>
									    <td>
									        @Html.DisplayFor(modelItem => item.ProductPrice)
									    </td>
									    @*<td>
									        @Html.DisplayFor(modelItem => item.ProductDescription)
									    </td>
									    <td>
									        @Html.DisplayFor(modelItem => item.QtyInStock)
									    </td>
									    <td>
									        @Html.DisplayFor(modelItem => item.QtyOnOrder)
									    </td>*@
									    <td>
												
											<img src="~/images/t_@item.ProductImage" class="img-fluid" alt="@item.ProductDescription" />
									        @*@Html.DisplayFor(modelItem => item.ProductImage)*@
									    </td>
									    <td>
									        @Html.DisplayFor(modelItem => item.Category.CategoryName)
									    </td>
									    @*<td>
									        @Html.DisplayFor(modelItem => item.Status.StatusName)
									    </td>*@
									    <td>
									        @Html.DisplayFor(modelItem => item.Supplier.SupplierName)
									    </td>
										<td>
											<a asp-action="AddToCart" asp-controller="ShoppingCart" asp-route-id="@item.ProductId" class="btn btn-default add-to-cart"><i class="fa fa-shopping-cart"></i>Add to cart</a>
										</td>

											@if (User.IsInRole("Admin"))
											{
												<td>
													<a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> |
													@*<a asp-action="Details" asp-route-id="@item.ProductId">Details</a> |*@


													@*
											Conditional Delete (Based upon Avaliability)
											- ONLY allow users to click on the delete button if the product
											is not directly related to any other records.
											- We can check the Count() of realated records for that product
											- If the Count() fpr that product is 0 , allow the users to click the delete link
											- Otherwise, disable the delete link
											*@

													@if (item.OrderProducts.Count() == 0)
													{
														//Allow user to delete
														<a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
													}
													else
													{
														<a disabled="true" class="text-danger" style="text-decoration: line-through;"
															title="Can't Delete - referenced by other records">
															Delete
														</a>
													}

												</td>

											}
									</tr>
								}
						    </tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
</section>


@section scripts {
	<script>

		$(document).ready(function () {
			//Update the selector in the function to taget the element with the class of table
			$('.table').DataTable();
		});


        //****** AJAX Create ******//
        //Hide on page load
        $("#ProductCreate").hide();
        $("#ToggleProductCreate").on("click", function() {
            $("#ProductCreate").toggle();
        });

        $("#ProductCreateForm").on("submit", function (e) {
            
            e.preventDefault();

            let formData = $(this).serializeArray();
            console.log(formData);

            $.ajax({
                url: "/Products/AjaxCreate",
                type: "POST",
                data: formData,
                dataType: "json",
                error: function(e) {
                    $("#MessageContent").html("<div class='alert alert-danger'>There was a problem...</div>");
                },
                success: function(product) {
                    $("#MessageContent").html("<div class='alert alert-success'>Product Added!</div>");
                    $("#ProductCreateForm")[0].reset();
                    $(function(){
                        let row = "<tr id='Product-" + product.productId + "'><td>" + product.productName + 
                        "</td><td>" + product.Price +
                        "</td><td>" + product.Description + 
                        "</td><td>" + product.qtyInStock +
                        "</td><td>" + product.qtyOnOrder +
                        "</td><td>" + product.statusId +
						"</td><td>" + product.productImage +
						"</td><td>" + product.categoryId +
						"</td><td>" + product.supplierId +
                        "</td><td> Refresh page for options</td></tr>";
                        $("#ProductsTable").append(row);
                        $("#ProductCreate").hide();
                    });
                }

            });


        });
	</script>

} 